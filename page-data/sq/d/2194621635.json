{"data":{"github":{"viewer":{"repositories":{"edges":[{"node":{"id":"R_kgDOGI6AjQ","name":"graphql-clean-architecture","url":"https://github.com/gayankanishka/graphql-clean-architecture","description":"The repository contains a backend of a simple Conference Planner and serves as a GraphQL server.","stargazers":{"totalCount":54},"forkCount":21}},{"node":{"id":"R_kgDOILDMhw","name":"worker-service-clean-architecture","url":"https://github.com/gayankanishka/worker-service-clean-architecture","description":"A workerService template project","stargazers":{"totalCount":1},"forkCount":0}},{"node":{"id":"R_kgDOHf8lLg","name":"CleanArchitecture","url":"https://github.com/gayankanishka/CleanArchitecture","description":"Clean Architecture Solution Template for .NET 6","stargazers":{"totalCount":1},"forkCount":0}},{"node":{"id":"MDEwOlJlcG9zaXRvcnkyNzYxMTE3ODA=","name":"find-me-movies-react","url":"https://github.com/gayankanishka/find-me-movies-react","description":"A movie finder application built with Reactjs + The movie DB API","stargazers":{"totalCount":1},"forkCount":0}},{"node":{"id":"R_kgDOHRQPDg","name":"CleanArchitecture.WorkerService","url":"https://github.com/gayankanishka/CleanArchitecture.WorkerService","description":"A solution template using Clean Architecture for building a .NET Core Worker Service.","stargazers":{"totalCount":0},"forkCount":0}},{"node":{"id":"R_kgDOHL080Q","name":"homebrew-cask","url":"https://github.com/gayankanishka/homebrew-cask","description":"üçª A CLI workflow for the administration of macOS applications distributed as binaries","stargazers":{"totalCount":0},"forkCount":0}}]}}}}}